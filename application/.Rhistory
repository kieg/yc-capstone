min(data.impute[, col]))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("road.death")
norm.road.death <- t
}
norm.road.death
max.norm <- function(col) {
( data.impute[r, col] -
min(data.impute[, col]) ) /
(max(data.impute[, col]) -
min(data.impute[, col])) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
min.norm <- function(col) {
91 - (( data.impute[r, col] -
min.norm <- function(col) {
(1 - (( data.impute[r, col] -
min(data.impute[, col]) ) /
(max(data.impute[, col]) -
min(data.impute[, col])))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("road.death")
norm.road.death <- t
}
norm.road.death
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("c.tax.rate")
norm.cost.movie <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("c.tax.rate")
norm.c.tax.rate <- t
}
norm.c.tax.rate
for (r in 1:nrow(data.impute)) {
t[r] <- max.norm("qty.recycled.materials")
qty.recycled.materials <- t
}
qty.recycled.materials
for (r in 1:nrow(data.impute)) {
t[r] <- max.norm("num.recycled.materials")
num.recycled.materials <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- max.norm("num.recylced.materials")
num.recycled.materials <- t
}
num.recycled.materials
View(data.full)
row.names(Raw.Clean[Raw.Clean$num.recylced.materials == 0, ])
Raw.Clean$recylced.materials[Raw.Clean$recylced.materials == 0] <- NA
Raw.Clean$water.scale[Raw.Clean$water.scale == 0] <- NA
row.names(Raw.Clean[Raw.Clean$num.recylced.materials == 0, ])
Raw.Clean$num.recylced.materials[Raw.Clean$num.recylced.materials == 0] <- NA
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("age.register.business")
norm.age.register.business <- t
}
norm.age.register.business
pop.max.norm <- function(col) {
(data.impute[r, col]/data.impute[r, "Population"]) *
(data.impute[r, col] -
min(data.impute[, col]) ) /
(max(data.impute[, col]) -
min(data.impute[, col])) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
pop.min.norm <- function(col) {
(data.impute[r, col]/data.impute[r, "Population"]) *
(1 - ((data.impute[r, col] -
min(data.impute[, col]) ) /
(max(data.impute[, col]) -
min(data.impute[, col])))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.road.death <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.homicides <- t
}
norm.homicides
pop.max.norm <- function(col) {
(((data.impute[r, col]/data.impute[r, "Population"]) *
(data.impute[r, col] -
min(data.impute[, col]) )) * 100000) /
(max(data.impute[, col]) -
min(data.impute[, col])) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.homicides <- t
}
norm.homicides
pop.max.norm <- function(col) {
popNorm[r] <- (((data.impute[r, col]/data.impute[r, "Population"]) *
(data.impute[r, col] -
min(data.impute[, col]) )) * 100000)
(popNorm[r] / (max(popNorm) - min(popNorm))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.homicides <- t
}
norm.homicides
pop.max.norm
popNorm
pop.max.norm <- function(col) {
homicide.capita[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(homicides.capita[r] - min(popNorm))
/ (max(popNorm) - min(popNorm))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
pop.max.norm <- function(col) {
homicide.capita[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(homicides.capita[r] - min(popNorm))
/ (max(popNorm) - min(popNorm))) *
pop.max.norm <- function(col) {
homicide.capita[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(homicides.capita[r] - min(homicides.capita))
/ (max(popNorm) - min(popNorm))) *
pop.max.norm <- function(col) {
homicide.capita <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(homicides.capita - min(homicides.capita))
/ (max(popNorm) - min(popNorm)) *
pop.max.norm <- function(col) {
homicide.capita <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(homicides.capita - min(homicides.capita)) / (max(popNorm) - min(popNorm)) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.homicides <- t
}
norm.homicides
shiny::runApp()
shiny::runApp()
shinyApp(ui = ui, server = server)
ui <- fluidPage(
sliderInput(inputId = "num2",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput(outputId = "some_name_hist"),
verbatimTextOutput("stats")
)
server <- function(input, output) {
data <- reactive({
rnorm(input$num2)
})
output$some_name_hist <- renderPlot({
title <- "100 random normal values"
hist(data(), main = title)
})
output$stats <- renderPrint({
summary(data())
})
}
shinyApp(ui = ui, server = server)
shiny::runApp()
shiny::runApp()
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.homicides <- t
}
orm.homicides
norm.homicides
pop.max.norm <- function(col) {
homicide.capita <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(homicides.capita - min(homicides.capita)) / (max(homicide.capita) - min(homicide.capita)) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.min.norm("homicides")
norm.homicides <- t
}
norm.homicides
pop.min.norm <- function(col) {
homicide.capita <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(1 - (homicides.capita - min(homicides.capita)) / (max(homicide.capita) - min(homicide.capita))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.max.norm("homicides")
norm.homicides <- t
}
pop.min.norm <- function(col) {
homicides.capita <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
(1 - (homicides.capita - min(homicides.capita)) / (max(homicide.capita) - min(homicide.capita))) *
as.numeric(LU.Ind.Cat.Weight[
LU.Ind.Cat.Weight$Indicator == col,  "Weight"])
}
for (r in 1:nrow(data.impute)) {
t[r] <- pop.max.norm("homicides")
norm.homicides <- t
}
per.capita <- function(col) {
t <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
}
per.capita("homicides")
t
t <- (data.impute[1, "homicides"] /
data.impute[1, "Population"])* 100000
t
for(r in 1:nrow(data.impute)){
per.capita <- function(col) {
t[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
}
}
t
t <- vector()
for(r in 1:nrow(data.impute)){
per.capita <- function(col) {
t[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
}
}
t
per.capita <- function(col) {
t[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
t <- vector()
for(r in 1:nrow(data.impute)){
per.capita("homicides")
}
}
t
by.per.capita <- function(col) {
per.capita[r] <- (data.impute[r, col] /
data.impute[r, "Population"])* 100000
by.per.capita <- function(col) {
(data.impute[r, col] /
data.impute[r, "Population"])* 100000
for(r in 1:nrow(data.impute)){
per.capita[r] <- by.per.capita("homicides")
}
}
}
by.per.capita <- function(col) {
(data.impute[r, col] /
data.impute[r, "Population"])* 100000
}
for(r in 1:nrow(data.impute)){
per.capita[r] <- by.per.capita("homicides")
}
}
by.per.capita <- function(col) {
(data.impute[r, col] /
data.impute[r, "Population"])* 100000
}
for(r in 1:nrow(data.impute)){
per.capita[r] <- by.per.capita("homicides")
}
per.capita <- vector()
for(r in 1:nrow(data.impute)){
per.capita[r] <- by.per.capita("homicides")
}
per.capita
data.impute[, "homicides"] <- homicides.per.capita
homicides.per.capita
for(r in 1:nrow(data.impute)){
homicides.per.capita[r] <- by.per.capita("homicides")
}
for(r in 1:nrow(data.impute)){
t[r] <- by.per.capita("homicides")
homicides.per.capita
}
for(r in 1:nrow(data.impute)){
t[r] <- by.per.capita("homicides")
homicides.per.capita <- t
}
homicides.per.capita
data.impute[, "homicides"] <- homicides.per.capita
for (r in 1:nrow(data.impute)) {
t[r] <- pop.max.norm("homicides")
norm.homicides <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("homicides")
norm.homicides <- t
}
norm.homicides
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm(c("road.death", "homicides")
norm.road.death <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm(c("road.death", "homicides"))
norm.road.death <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm(c("road.death")
norm.road.death <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("road.death")
norm.road.death <- t
}
View(Affordability)
LU.Exchange.Rate <- Affordability[,c(2,11)]
View(LU.Exchange.Rate)
LU.Exchange.Rate <- LU.Exchange.Rate[-1,]
colnames(LU.Exchange.Rate) <- LU.Exchange.Rate[1, ]
LU.Exchange.Rate <- LU.Exchange.Rate[-1, ]
colnames(LU.Exchange.Rate) <- c("Country", "Exchange")
LU.Exchange.Rate <- apply(LU.Exchange.Rate, 1, function(x) round(x,2))
LU.Exchange.Rate <- apply(LU.Exchange.Rate, 2, function(x) round(x,2))
LU.Exchange.Rate <- apply(LU.Exchange.Rate[,2], 2, function(x) round(x,2))
LU.Exchange.Rate$Exchange <- round(LU.Exchange.Rate$Exchange, 2))
LU.Exchange.Rate$Exchange <- round(LU.Exchange.Rate$Exchange, 2)
class(LU.Exchange.Rate$Exchange)
LU.Exchange.Rate$Exchange <- as.numeric(as.character(LU.Exchange.Rate$Exchange))
LU.Exchange.Rate$Exchange <-round(LU.Exchange.Rate$Exchange, 2)
```
LU.Exchange.Rate <- Affordability[,c(2,11)]
LU.Exchange.Rate <- LU.Exchange.Rate[-1, ]
LU.Exchange.Rate <- LU.Exchange.Rate[-1, ]
LU.Exchange.Rate <- Affordability[,c(2,11)]
LU.Exchange.Rate <- LU.Exchange.Rate[3:57, ]
colnames(LU.Exchange.Rate) <- c("Country", "Exchange")
LU.Exchange.Rate$Exchange <- as.numeric(as.character(LU.Exchange.Rate$Exchange))
LU.Exchange.Rate$Exchange <-round(LU.Exchange.Rate$Exchange, 2)
LU.Exchange.Wage <- Affordability[,c(2,11,13)]
LU.Exchange.Wage <- LU.Exchange.Rate[3:57, ]
colnames(LU.Exchange.Wage) <- c("Country", "Exchange", "Minimum.Wage")
LU.Exchange.Wage <- Affordability[,c(2,11,13)]
View(LU.Exchange.Wage)
LU.Exchange.Wage <- LU.Exchange.Rate[3:57, ]
colnames(LU.Exchange.Wage) <- c("Country", "Exchange", "Minimum.Wage")
View(LU.Exchange.Wage)
LU.Exchange.Wage <- Affordability[,c(2,11,13)]
LU.Exchange.Wage <- LU.Exchange.Wage[3:57, ]
colnames(LU.Exchange.Wage) <- c("Country", "Exchange", "Minimum.Wage")
LU.Exchange.Wage$Exchange <- as.numeric(as.character(LU.Exchange.Wage$Exchange))
LU.Exchange.Wage$Exchange <-round(LU.Exchange.Wage$Exchange, 2)
LU.Exchange.Wage$Exchange <-round(LU.Exchange.Wage$Minimum.Wage, 2)
LU.Exchange.Wage$Minimum.Wage <- as.numeric(as.character(LU.Exchange.Wage$Minimum.Wage))
LU.Exchange.Wage$Exchange <-round(LU.Exchange.Wage$Minimum.Wage, 2)
LU.Exchange.Wage <- Affordability[,c(2,11,13)]
LU.Exchange.Wage <- LU.Exchange.Wage[3:57, ]
colnames(LU.Exchange.Wage) <- c("Country", "Exchange", "Minimum.Wage")
LU.Exchange.Wage$Exchange <- as.numeric(as.character(LU.Exchange.Wage$Exchange))
LU.Exchange.Wage$Minimum.Wage <- as.numeric(as.character(LU.Exchange.Wage$Minimum.Wage))
LU.Exchange.Wage$Minimum.Wage <-round(LU.Exchange.Wage$Minimum.Wage, 2)
by.exchange <- function(col) {
(data.impute[r, col] *
LU.Exchange.Wage[r, "Exhange"]) / LU.Exchange.Wage[r, "Minimum.Wage"]
}
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
by.exchange <- function(col) {
(data.impute[r, col] *
LU.Exchange.Wage[r, "Exchange"]) / LU.Exchange.Wage[r, "Minimum.Wage"]
}
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
cellular.cost.exchange
(data.impute[1, "cellular.cost"] *
LU.Exchange.Wage[1, "Exchange"]) / LU.Exchange.Wage[1, "Minimum.Wage"]
View(data.impute)
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
data.impute[, "cellular.cost"] <- cellular.cost.exchange
data.impute[, "cellular.cost"]
cellular.cost.exchange
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
unlist(cellular.cost.exchange)
}
cellular.cost.exchange
(data.impute[1, "cellular.cost"] *
LU.Exchange.Wage[1, "Exchange"]) / LU.Exchange.Wage[1, "Minimum.Wage"]
----------------------
(data.impute[1, "cellular.cost"] *
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
t
t
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("homicides")
norm.homicides <- t
}
for(r in 1:nrow(data.impute)){
t[r] <- by.per.capita("homicides")
homicides.per.capita <- t
}
t
t <- vector()
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
cellular.cost.exchange
data.impute[, "cellular.cost"] <- cellular.cost.exchange
data.impute[, "cellular.cost"]
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("cellular")
norm.cellular <- t
}
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("cellular.cost")
norm.cellular <- t
}
norm.cellular
t <- vector()
for (r in 1:nrow(data.impute)) {
t[r] <- min.norm("cellular.cost")
norm.cellular <- t
}
norm.cellular
t <- vector()
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
cellular.cost.exchange
(data.impute[1, "cellular.cost"] *
LU.Exchange.Wage[1, "Exchange"]) / LU.Exchange.Wage[1, "Minimum.Wage"]
----------------------
by.exchange <- function(col) {
(data.impute[r, col] *
LU.Exchange.Wage[r, "Exchange"]) / LU.Exchange.Wage[r, "Minimum.Wage"]
}
by.exchange <- function(col) {
(data.impute[r, col] *
LU.Exchange.Wage[r, "Exchange"]) / LU.Exchange.Wage[r, "Minimum.Wage"]
}
t <- vector()
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
cellular.cost.exchange
data.impute <- data.frame()
for (c in 1:ncol(data.full)) {
for (r in 1:length(data.full[, c])) {
if (is.na(data.full[r,c])) {     # if it is NA, continue
data.impute[r,c] <- as.numeric(mean(data.full[data.full$Region == data.full[r, "Region"], c], na.rm = TRUE))
} else {  #if not NA, keep the same as original dataset
data.impute[r, c] <- as.numeric(data.full[r, c])
}
}
}
colnames(data.impute) <- colnames(data.full)
row.names(data.impute) <- row.names(data.full)
by.exchange <- function(col) {
(data.impute[r, col] *
LU.Exchange.Wage[r, "Exchange"]) / LU.Exchange.Wage[r, "Minimum.Wage"]
}
t <- vector()
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
cellular.cost.exchange
data.impute2[, "cellular.cost"] <- cellular.cost.exchange
data.impute.transform <- data.impute
data.impute.transform[, "cellular.cost"] <- cellular.cost.exchange
t <- vector()
for (r in 1:nrow(data.impute.transform)) {
t[r] <- min.norm("cellular.cost")
norm.cellular <- t
}
norm.cellular
for(r in 1:nrow(data.impute)){
t[r] <- by.exchange ("cellular.cost")
cellular.cost.exchange <- t
}
cellular.cost.exchange
data.impute.transform[, "cellular.cost"] <- cellular.cost.exchange
t <- vector()
for (r in 1:nrow(data.impute.transform)) {
t[r] <- min.norm("cellular.cost")
norm.cellular <- t
}
norm.cellular
