affordability      <- f.scores[ , cat.lookup[cat.lookup$Category == "Affordability", 1]]
transit            <- f.scores[ , cat.lookup[cat.lookup$Category == "Transit", 1]]
health             <- f.scores[ , cat.lookup[cat.lookup$Category == "Health", 1]]
travel             <- f.scores[ , cat.lookup[cat.lookup$Category == "Travel", 1]]
employment         <- f.scores[ , cat.lookup[cat.lookup$Category == "Employment", 1]]
environment        <- f.scores[ , cat.lookup[cat.lookup$Category == "Environment", 1]]
education          <- f.scores[ , cat.lookup[cat.lookup$Category == "Education", 1]]
entrepreneurship   <- f.scores[ , cat.lookup[cat.lookup$Category == "Entrepreneurship", 1]]
public.space       <- f.scores[ , cat.lookup[cat.lookup$Category == "Public space", 1]]
financial.services <- f.scores[ , cat.lookup[cat.lookup$Category == "Financial services", 1]]
diversity          <- f.scores[ , cat.lookup[cat.lookup$Category == "Diversity", 1]]
digital.access     <- f.scores[ , cat.lookup[cat.lookup$Category == "Digital Access", 1]]
music              <- f.scores[ , cat.lookup[cat.lookup$Category == "Music", 1]]
creative.arts      <- as.data.frame(f.scores[ , cat.lookup[cat.lookup$Category == "Creative arts", 1]])
row.names(creative.arts) <- row.names(f.scores) #necessary because it is coerced to a vector originally b/c only one column is being extracted.
sports             <- f.scores[ , cat.lookup[cat.lookup$Category == "Sports", 1]]
film               <- f.scores[ , cat.lookup[cat.lookup$Category == "Film", 1]]
civic.engagement   <- f.scores[ , cat.lookup[cat.lookup$Category == "Civic engagement", 1]]
food.nightlife     <- f.scores[ , cat.lookup[cat.lookup$Category == "Food and nightlife", 1]]
fashion            <- f.scores[ , cat.lookup[cat.lookup$Category == "Fashion", 1]]
ui <- dashboardPage(
dashboardHeader(title = "YouthfulCities Interactive Ranking Index", titleWidth = 450),
dashboardSidebar(width = 150,
tags$head(
tags$script(
HTML(
"
$(document).ready(function(){
// Bind classes to menu items, easiet to fill in manually
var ids = ['controls','dashboard'];
for(i=0; i<ids.length; i++){
$('a[data-value='+ids[i]+']').addClass('my_subitem_class');
}
// Register click handeler
$('.my_subitem_class').on('click',function(){
// Unactive menuSubItems
$('.my_subitem_class').parent().removeClass('active');
})
})
" # a nifty solution to tabs staying active (and thus not swithching back) from here http://stackoverflow.com/questions/32847743/switching-between-menusubitems-in-shinydashboard
)
)
),
menuItem("Controls", tabName = "controls", icon = icon("th")),
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
dashboardBody(
tabItems(
tabItem(tabName = "controls",
# Boxes need to be put in a row (or column)
fluidRow(
box(
title = "Instructions",
width = 6,
background = "blue",
"Welcome to the interactive YouthfulCities Ranking Index. This tool will allow you to
see how cities compare based upon characterics of interest to you!"
,br(),br(),
"Using the drop down menus to the left, first select three cities that you are interested in comparing"
,br(),br(),
"Next, using the dropdown menus below, you are able to weight the categories that are most important
to you. If you select 0, the variable will be omitted from the calculations entirely. The higher
the number you select, the more weight will be given to the selected variable, up to a maximum
of 2x weight.",
br(), br(),
"The index rankings will be updated instantly. Simply select Dashboard from the left sidebar to
view updated scores."
),
box(width = 6,
title = "Select Three Cities",
solidHeader = TRUE,
status = "success",
selectInput("city.choice1", label = h5(""),
choices = list(cities = cities),
selected = "Toronto"),
selectInput("city.choice2", label = h5(""),
choices = list(cities = cities),
selected = "New.York"),
selectInput("city.choice3", label = h5(""),
choices = list(cities = cities),
selected = "Manila")
)
),
fluidRow(
box(
width = 12, background = "yellow",
title = "Weight Categories of Interest"
)
),
fluidRow(
box(width = 3,
solidHeader = TRUE,
status = "warning",
selectInput('affordability',
label = h5('Affordability'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('civic.engagement', label = h5('Civic Engagement'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('creative.arts', label = h5('Creative Arts'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('digital.access', label = h5('Digital Access'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('diversity', label = h5('Diversity'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1)
),
box(width = 3,
solidHeader = TRUE,
status = "warning",
selectInput('education',
label = h5('Education'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('employment', label = h5('Employment'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('entrepreneurship', label = h5('Entrepreneurship'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('environment', label = h5('Environment'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('fashion', label = h5('Fashion'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
)
),
box(width = 3,
solidHeader = TRUE,
status = "warning",
selectInput('film',
label = h5('Film'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('financial.services', label = h5('Financial Services'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('food.nightlife', label = h5('Food and Nightlife'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('health', label = h5('Health'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('music', label = h5('Music'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1)
),
box(width = 3,
solidHeader = TRUE,
status = "warning",
selectInput('public.space',
label = h5('Public Space'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('safety', label = h5('Safety'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('sports', label = h5('Sports'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('transit', label = h5('Transit'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1
),
selectInput('travel', label = h5('Travel'),
choices = list("0 - Do not include" = 0, "1 - Unimportant" = .2,"2" = .4,"3" = .6,
"4" = .8, "5 - Default" = 1,"6" = 1.2,"7" = 1.4,"8" = 1.6,"9" = 1.8,
"10 - Very Important" = 2),
selected = 1)
)
),
fluidRow(
box(
width = 12,
title = " ", br(), br(), br(), br()
)
)
),
tabItem(tabName = "dashboard",
fluidRow(
box(width = 4,
solidHeader = TRUE,
status = "success",
background = "green",
title = textOutput("City1"),
h1(textOutput("Score1"))
),
box(width = 4,
solidHeader = TRUE,
status = "success",
background = "green",
title = textOutput("City2"),
h1(textOutput("Score2"))
),
box(width = 4,
solidHeader = TRUE,
status = "success",
background = "green",
title = textOutput("City3"),
h1(textOutput("Score3")))
),
fluidRow(
box(width = 12,
status = "warning",
dataTableOutput('scoretable')),
box(width = 12,
status = "warning",
dataTableOutput('scoretable2'))
)
)
)
)
)
server <- function(input, output) {
output$City1 <- renderText({
paste(input$city.choice1)
})
output$City2 <- renderText({
paste(input$city.choice2)
})
output$City3 <- renderText({
paste(input$city.choice3)
})
output$Score1 <- renderPrint({ cat(
round(
sum(
rowMeans(as.numeric(input$affordability)      * affordability[input$city.choice1,]),
rowMeans(as.numeric(input$civic.engagement)   * civic.engagement[input$city.choice1,]),
((as.numeric(input$creative.arts)             * creative.arts[input$city.choice1,])),  # only one dimension
rowMeans(as.numeric(input$digital.access)     * digital.access[input$city.choice1,]),
rowMeans(as.numeric(input$diversity)          * diversity[input$city.choice1,]),
rowMeans(as.numeric(input$education)          * education[input$city.choice1,]),
rowMeans(as.numeric(input$employment)         * employment[input$city.choice1,]),
rowMeans(as.numeric(input$entrepreneurship)   * entrepreneurship[input$city.choice1,]),
rowMeans(as.numeric(input$environment)        * environment[input$city.choice1,]),
rowMeans(as.numeric(input$fashion)            * fashion[input$city.choice1,]),
rowMeans(as.numeric(input$film)               * film[input$city.choice1,]),
rowMeans(as.numeric(input$financial.services) * financial.services[input$city.choice1,]),
rowMeans(as.numeric(input$food.nightlife)     * food.nightlife[input$city.choice1,]),
rowMeans(as.numeric(input$health)             * health[input$city.choice1,]),
rowMeans(as.numeric(input$music)              * music[input$city.choice1,]),
rowMeans(as.numeric(input$public.space)       * public.space[input$city.choice1,]),
rowMeans(as.numeric(input$safety)             * safety[input$city.choice1,]),
rowMeans(as.numeric(input$sports)             * sports[input$city.choice1,]),
rowMeans(as.numeric(input$transit)            * transit[input$city.choice1,]),
rowMeans(as.numeric(input$travel)             * travel[input$city.choice1,])
), 0
)
)
})
output$Score2 <- renderPrint({ cat(
round(
sum(
rowMeans(as.numeric(input$affordability)      * affordability[input$city.choice2,]),
rowMeans(as.numeric(input$civic.engagement)   * civic.engagement[input$city.choice2,]),
((as.numeric(input$creative.arts)             * creative.arts[input$city.choice2,])),  # only one dimension
rowMeans(as.numeric(input$digital.access)     * digital.access[input$city.choice2,]),
rowMeans(as.numeric(input$diversity)          * diversity[input$city.choice2,]),
rowMeans(as.numeric(input$education)          * education[input$city.choice2,]),
rowMeans(as.numeric(input$employment)         * employment[input$city.choice2,]),
rowMeans(as.numeric(input$entrepreneurship)   * entrepreneurship[input$city.choice2,]),
rowMeans(as.numeric(input$environment)        * environment[input$city.choice2,]),
rowMeans(as.numeric(input$fashion)            * fashion[input$city.choice2,]),
rowMeans(as.numeric(input$film)               * film[input$city.choice2,]),
rowMeans(as.numeric(input$financial.services) * financial.services[input$city.choice2,]),
rowMeans(as.numeric(input$food.nightlife)     * food.nightlife[input$city.choice2,]),
rowMeans(as.numeric(input$health)             * health[input$city.choice2,]),
rowMeans(as.numeric(input$music)              * music[input$city.choice2,]),
rowMeans(as.numeric(input$public.space)       * public.space[input$city.choice2,]),
rowMeans(as.numeric(input$safety)             * safety[input$city.choice2,]),
rowMeans(as.numeric(input$sports)             * sports[input$city.choice2,]),
rowMeans(as.numeric(input$transit)            * transit[input$city.choice2,]),
rowMeans(as.numeric(input$travel)             * travel[input$city.choice2,])
) ,0
)
)
})
output$Score3 <- renderPrint({ cat(
round(
sum(
rowMeans(as.numeric(input$affordability)      * affordability[input$city.choice3,]),
rowMeans(as.numeric(input$civic.engagement)   * civic.engagement[input$city.choice3,]),
((as.numeric(input$creative.arts)             * creative.arts[input$city.choice3,])),  # only one dimension
rowMeans(as.numeric(input$digital.access)     * digital.access[input$city.choice3,]),
rowMeans(as.numeric(input$diversity)          * diversity[input$city.choice3,]),
rowMeans(as.numeric(input$education)          * education[input$city.choice3,]),
rowMeans(as.numeric(input$employment)         * employment[input$city.choice3,]),
rowMeans(as.numeric(input$entrepreneurship)   * entrepreneurship[input$city.choice3,]),
rowMeans(as.numeric(input$environment)        * environment[input$city.choice3,]),
rowMeans(as.numeric(input$fashion)            * fashion[input$city.choice3,]),
rowMeans(as.numeric(input$film)               * film[input$city.choice3,]),
rowMeans(as.numeric(input$financial.services) * financial.services[input$city.choice3,]),
rowMeans(as.numeric(input$food.nightlife)     * food.nightlife[input$city.choice3,]),
rowMeans(as.numeric(input$health)             * health[input$city.choice3,]),
rowMeans(as.numeric(input$music)              * music[input$city.choice3,]),
rowMeans(as.numeric(input$public.space)       * public.space[input$city.choice3,]),
rowMeans(as.numeric(input$safety)             * safety[input$city.choice3,]),
rowMeans(as.numeric(input$sports)             * sports[input$city.choice3,]),
rowMeans(as.numeric(input$transit)            * transit[input$city.choice3,]),
rowMeans(as.numeric(input$travel)             * travel[input$city.choice3,])
), 0
)
)
})
output$scoretable <- renderDataTable({
as.data.frame(
rbind(
cbind(
CityNames = input$city.choice1,
Affordability = round(rowMeans(as.numeric(input$affordability)      * affordability[input$city.choice1,]),0),
Civic.Engagament = round(rowMeans(as.numeric(input$civic.engagement)   * civic.engagement[input$city.choice1,]),0),
Creative.Arts = round(((as.numeric(input$creative.arts)             * creative.arts[input$city.choice1,])),0),
Digital.Access = round(rowMeans(as.numeric(input$digital.access)     * digital.access[input$city.choice1,]),0),
Diversity = round(rowMeans(as.numeric(input$diversity)          * diversity[input$city.choice1,]),0),
Education = round(rowMeans(as.numeric(input$education)          * education[input$city.choice1,]),0),
Employment = round(rowMeans(as.numeric(input$employment)         * employment[input$city.choice1,]),0),
Entrepreneurship = round( rowMeans(as.numeric(input$entrepreneurship)   * entrepreneurship[input$city.choice1,]),0),
Environment = round(rowMeans(as.numeric(input$environment)        * environment[input$city.choice1,]),0),
Fashion = round(rowMeans(as.numeric(input$fashion)            * fashion[input$city.choice1,]),0)
),
cbind(
CityNames = input$city.choice2,
Affordability = round(rowMeans(as.numeric(input$affordability)      * affordability[input$city.choice2,]),0),
Civic.Engagament = round(rowMeans(as.numeric(input$civic.engagement)   * civic.engagement[input$city.choice2,]),0),
Creative.Arts = round(((as.numeric(input$creative.arts)             * creative.arts[input$city.choice2,])),0),
Diversity = round(rowMeans(as.numeric(input$digital.access)     * digital.access[input$city.choice2,]),0),
Digital.Access = round(rowMeans(as.numeric(input$diversity)          * diversity[input$city.choice2,]),0),
Education = round(rowMeans(as.numeric(input$education)          * education[input$city.choice2,]),0),
Employment = round(rowMeans(as.numeric(input$employment)         * employment[input$city.choice2,]),0),
Entrepreneurship = round(rowMeans(as.numeric(input$entrepreneurship)   * entrepreneurship[input$city.choice2,]),0),
Environment = round(rowMeans(as.numeric(input$environment)        * environment[input$city.choice2,]),0),
Fashion = round(rowMeans(as.numeric(input$fashion)            * fashion[input$city.choice2,]),0)
),
cbind(
CityNames = input$city.choice3,
Affordability = round(rowMeans(as.numeric(input$affordability)      * affordability[input$city.choice3,]),0),
Civic.Engagament = round(rowMeans(as.numeric(input$civic.engagement)   * civic.engagement[input$city.choice3,]),0),
Creative.Arts = round(((as.numeric(input$creative.arts)             * creative.arts[input$city.choice3,])),0),
Diversity = round(rowMeans(as.numeric(input$digital.access)     * digital.access[input$city.choice3,]),0),
Digital.Access = round(rowMeans(as.numeric(input$diversity)          * diversity[input$city.choice3,]),0),
Education = round(rowMeans(as.numeric(input$education)          * education[input$city.choice3,]),0),
Employment = round(rowMeans(as.numeric(input$employment)         * employment[input$city.choice3,]),0),
Entrepreneurship = round(rowMeans(as.numeric(input$entrepreneurship)   * entrepreneurship[input$city.choice3,]),0),
Environment = round(rowMeans(as.numeric(input$environment)        * environment[input$city.choice3,]),0),
Fashion = round(rowMeans(as.numeric(input$fashion)            * fashion[input$city.choice3,]),0)
)
)
)
})
output$scoretable2 <- renderDataTable({
as.data.frame(
rbind(
cbind(
CityNames = input$city.choice1,
Film = round(rowMeans(as.numeric(input$film)               * film[input$city.choice1,]),0),
Financial.Services = round(rowMeans(as.numeric(input$financial.services) * financial.services[input$city.choice1,]),0),
Food.and.Nightlife = round(rowMeans(as.numeric(input$food.nightlife)     * food.nightlife[input$city.choice1,]),0),
Health = round(rowMeans(as.numeric(input$health)             * health[input$city.choice1,]),0),
Music = round(rowMeans(as.numeric(input$music)              * music[input$city.choice1,]),0),
Public.Space = round(rowMeans(as.numeric(input$public.space)       * public.space[input$city.choice1,]),0),
Safety = round(rowMeans(as.numeric(input$safety)             * safety[input$city.choice1,]),0),
Sports = round(rowMeans(as.numeric(input$sports)             * sports[input$city.choice1,]),0),
Transit = round(rowMeans(as.numeric(input$transit)            * transit[input$city.choice1,]),0),
Travel = round(rowMeans(as.numeric(input$travel)             * travel[input$city.choice1,]),0)
),
cbind(
CityNames = input$city.choice2,
Film = round(rowMeans(as.numeric(input$film)               * film[input$city.choice2,]),0),
Financial.Services = round(rowMeans(as.numeric(input$financial.services) * financial.services[input$city.choice2,]),0),
Food.and.Nightlife = round(rowMeans(as.numeric(input$food.nightlife)     * food.nightlife[input$city.choice2,]),0),
Health = round(rowMeans(as.numeric(input$health)             * health[input$city.choice2,]),0),
Music = round(rowMeans(as.numeric(input$music)              * music[input$city.choice2,]),0),
Public.Space = round(rowMeans(as.numeric(input$public.space)       * public.space[input$city.choice2,]),0),
Safety = round(rowMeans(as.numeric(input$safety)             * safety[input$city.choice2,]),0),
Sports = round(rowMeans(as.numeric(input$sports)             * sports[input$city.choice2,]),0),
Transit = round(rowMeans(as.numeric(input$transit)            * transit[input$city.choice2,]),0),
Travel = round(rowMeans(as.numeric(input$travel)             * travel[input$city.choice2,]),0)
),
cbind(
CityNames = input$city.choice3,
Film = round(rowMeans(as.numeric(input$film)               * film[input$city.choice3,]),0),
Financial.Services = round(rowMeans(as.numeric(input$financial.services) * financial.services[input$city.choice3,]),0),
Food.and.Nightlife = round(rowMeans(as.numeric(input$food.nightlife)     * food.nightlife[input$city.choice3,]),0),
Health = round(rowMeans(as.numeric(input$health)             * health[input$city.choice3,]),0),
Music = round(rowMeans(as.numeric(input$music)              * music[input$city.choice3,]),0),
Public.Space = round(rowMeans(as.numeric(input$public.space)       * public.space[input$city.choice3,]),0),
Safety = round(rowMeans(as.numeric(input$safety)             * safety[input$city.choice3,]),0),
Sports = round(rowMeans(as.numeric(input$sports)             * sports[input$city.choice3,]),0),
Transit = round(rowMeans(as.numeric(input$transit)            * transit[input$city.choice3,]),0),
Travel = round(rowMeans(as.numeric(input$travel)             * travel[input$city.choice3,]),0)
)
)
)
})
}
shinyApp(ui, server)
View(f.scores)
View(cat.lookup)
safety             <- f.scores[ , cat.lookup[cat.lookup$Category == "Safety", 1]]
View(safety)
View(f.scores)
cat.lookup$Category == "Safety", 1]
cat.lookup$Category == "Safety"
cat.lookup[cat.lookup$Category == "Safety", 1]
cat.lookup
View(raw)
raw <- read.table(file = "raw.sample.csv", sep = " ",
header = TRUE,
nrows = 200,
stringsAsFactors = FALSE)
cat.lookup <- raw[ ,1:2]
cities <- row.names(f.scores)
categories <- unique(cat.lookup$Category)
safety             <- f.scores[ , cat.lookup[cat.lookup$Category == "Safety", 1]]
affordability      <- f.scores[ , cat.lookup[cat.lookup$Category == "Affordability", 1]]
transit            <- f.scores[ , cat.lookup[cat.lookup$Category == "Transit", 1]]
health             <- f.scores[ , cat.lookup[cat.lookup$Category == "Health", 1]]
travel             <- f.scores[ , cat.lookup[cat.lookup$Category == "Travel", 1]]
employment         <- f.scores[ , cat.lookup[cat.lookup$Category == "Employment", 1]]
environment        <- f.scores[ , cat.lookup[cat.lookup$Category == "Environment", 1]]
education          <- f.scores[ , cat.lookup[cat.lookup$Category == "Education", 1]]
entrepreneurship   <- f.scores[ , cat.lookup[cat.lookup$Category == "Entrepreneurship", 1]]
public.space       <- f.scores[ , cat.lookup[cat.lookup$Category == "Public space", 1]]
financial.services <- f.scores[ , cat.lookup[cat.lookup$Category == "Financial services", 1]]
diversity          <- f.scores[ , cat.lookup[cat.lookup$Category == "Diversity", 1]]
digital.access     <- f.scores[ , cat.lookup[cat.lookup$Category == "Digital Access", 1]]
music              <- f.scores[ , cat.lookup[cat.lookup$Category == "Music", 1]]
creative.arts      <- as.data.frame(f.scores[ , cat.lookup[cat.lookup$Category == "Creative arts", 1]])
row.names(creative.arts) <- row.names(f.scores) #necessary because it is coerced to a vector originally b/c only one column is being extracted.
sports             <- f.scores[ , cat.lookup[cat.lookup$Category == "Sports", 1]]
film               <- f.scores[ , cat.lookup[cat.lookup$Category == "Film", 1]]
civic.engagement   <- f.scores[ , cat.lookup[cat.lookup$Category == "Civic engagement", 1]]
food.nightlife     <- f.scores[ , cat.lookup[cat.lookup$Category == "Food and nightlife", 1]]
fashion            <- f.scores[ , cat.lookup[cat.lookup$Category == "Fashion", 1]]
shiny::runApp('C:/Users/Kie/Dropbox/capstone/app')
shiny::runApp('C:/Users/Kie/Dropbox/capstone/app')
shiny::runApp('C:/Users/Kie/Dropbox/capstone/app')
install.packages(c("shiny", "shinydashboard"))
shiny::runApp()
shiny::runApp()
devtools::install_github('rstudio/rsconnect')
library(shinyapps)
install.packages('packrat', type = 'source')
library(shinyapps)
shiny::runApp()
devtools::install_github('rstudio/rsconnect')
library('shinyapps')
install.packages("shiny")
install.packages("shiny")
library('shiny')
library('shinydashboard')
library('shinyapps')
shiny::runApp()
shiny::runApp()
shiny::runApp()
